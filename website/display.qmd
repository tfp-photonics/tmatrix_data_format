---
title: "Displaying T-matrices with R"
author: "baptiste"
date: today
format: html
---

[R utility functions](_utilities.R) used below.

```{r setup, echo=FALSE, message=FALSE, warning=FALSE}
library(knitr)
library(dplyr)
library(ggplot2)
library(grid)
library(patchwork)
read_chunk('_utilities.R')
source("_utilities.R")
```


The following R code produces a visual heatmap of a T-matrix with a standard 2x2 block matrix layout and indexing conventions.

Example data in long format:

```{r}
f <- '../smarties/smarties_simple.tmat.h5'
slices <- read_tmat(f)
d1 <- slices[slices$wavelength == 400,]
d2 <- slices[slices$wavelength == 750,]

dm <- rbind(
  mutate(d1, wavelength = "400 nm"),
  mutate(d2, wavelength = "750 nm"))
```

Custom visualisation:

```{r}
lmax <- max(dm$l)
breaks <- tmatrix_breaks(lmax)

p <- ggplot(dm, aes(q, qp, fill= log10(Mod(Tr + 1i*Ti)))) +
  geom_tile() +
  coord_equal() + facet_wrap(~wavelength) +
  scale_fill_viridis_c(option = 'A', direction = -1, na.value = "transparent") +
  annotate('segment',x=0.5,xend=max(breaks$breaks)+0.5,y=max(breaks$breaks)/2+0.5,
           yend=max(breaks$breaks)/2+0.5,colour='white')+
  annotate('segment',y=0.5,yend=max(breaks$breaks)+0.5,x=max(breaks$breaks)/2+0.5,
           xend=max(breaks$breaks)/2+0.5,colour='white')+
  scale_y_reverse(expand=c(0,0), breaks= breaks$breaks+0.5, minor_breaks=breaks$minor_breaks+0.5, labels=breaks$labels) +
  scale_x_continuous(expand=c(0,0), breaks= breaks$breaks+0.5, minor_breaks=breaks$minor_breaks+0.5, labels=breaks$labels) +
  theme_minimal() +
  theme(panel.grid = element_line(colour = 'white'), 
        panel.background = element_rect(fill='grey90',colour='white'),
        panel.border = element_rect(colour='black',fill=NA,linewidth = 0.2),
        axis.text.x = element_text(hjust=1),
        axis.text.y = element_text(vjust=0)) +
  labs(x="p",y="p'",fill=expression(log~"|T"[ij]*"|"))

p
```

## Display in $(u,u')$ grouping

In the tmat.h5 indexing convention, electric and magnetic elements are interleaved, leading to the following display:

```{r}
treams_breaks <- function(lmax){
  
  l <- seq.int(lmax)
  qmax <- 2*(lmax*(lmax + 1)+lmax)
  list(breaks = 2*cumsum((2*l+1)),
       labels = 2*cumsum((2*l+1)),
       minor_breaks = seq.int(qmax))
}
lmax <- max(dm$l)
breaks <- treams_breaks(lmax)

p <- ggplot(dm, aes(u, up, fill= log10(Mod(Tr + 1i*Ti)))) +
  geom_tile() +
  coord_equal() + facet_wrap(~wavelength) +
  scale_fill_viridis_c(option = 'A', direction = -1, na.value = "transparent") +
  # annotate('segment',x=0.5,xend=max(breaks$breaks)+0.5,y=max(breaks$breaks)/2+0.5,
  #          yend=max(breaks$breaks)/2+0.5,colour='white')+
  # annotate('segment',y=0.5,yend=max(breaks$breaks)+0.5,x=max(breaks$breaks)/2+0.5,
  #          xend=max(breaks$breaks)/2+0.5,colour='white')+
  scale_y_reverse(expand=c(0,0), breaks= breaks$breaks+0.5, minor_breaks=breaks$minor_breaks+0.5, labels=breaks$labels) +
  scale_x_continuous(expand=c(0,0), breaks= breaks$breaks+0.5, minor_breaks=breaks$minor_breaks+0.5, labels=breaks$labels) +
  # scale_y_reverse(expand=c(0,0)) +
  # scale_x_continuous(expand=c(0,0)) +
  theme_minimal() +
  theme(panel.grid = element_line(colour = 'white'), 
        panel.background = element_rect(fill='grey90',colour='white'),
        panel.border = element_rect(colour='black',fill=NA,linewidth = 0.2),
        axis.text.x = element_text(hjust=1),
        axis.text.y = element_text(vjust=0)) +
  labs(x="u",y="u'",fill=expression(log~"|T"[ij]*"|"))

p
```
